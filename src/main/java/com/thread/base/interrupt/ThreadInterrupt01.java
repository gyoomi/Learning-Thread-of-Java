package com.thread.base.interrupt;

/**
 * 中断机制
 * 1.概念
 *     Java没有提供一种安全、直接的方法来停止某个线程，而是提供了中断机制。
 *     中断机制是一种协作机制，也就是说通过中断并不能直接终止另一个线程，而需要被中断的线程自己处理。
 *     通俗一点的理解就是：仅仅是在当前线程中打了一个停止的标记，并不是真的停止了线程。
 * 2.判断线程是否是停止状态
 *     this.interrupted() 测试当前线程是否已经中断。具备清除功能，也就是连续调用两次一定返回false。（代表未被中断）
 *     this.IsInterrupted() 测试线程是否已经中断。中断标识位的状态并不受到该方法的影响。
 * 3.中断线程的方法
 *     this.interrupt()
 * 4.停止异常的常用方法
 *    1）使用退出标记，使线程正常退出，也就使run方法完成后
 *    2）使用stop方法强行终止线程，不推荐，方法已过时，容易造成不可知的错误。同样的suspend()、resume()一样不推荐使用
 *    3）使用interrupt方法在合适的时机退出（需要加入判断，在恰当的时机完成退出即可）
 *
 *
 * @author Leon
 * @version 2019/2/18 22:28
 */
public class ThreadInterrupt01 {


}
